diff --git a/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/GreedyKCenters.h b/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/GreedyKCenters.h
index b1120c3864..a5a710e030 100644
--- a/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/GreedyKCenters.h
+++ b/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/GreedyKCenters.h
@@ -89,7 +89,7 @@ class GreedyKCenters
     centers.clear();
     centers.reserve(k);
     if (((long unsigned int)dists.rows()) < data.size() || ((long unsigned int)dists.cols()) < k)
-      dists.resize(std::max(2 * ((long unsigned int)dists.rows()) + 1, data.size()), k);
+      dists.resize(std::max(2 * ((long unsigned int)dists.rows()) + 1, (long unsigned int)data.size()), k);
     // first center is picked randomly
     centers.push_back(std::uniform_int_distribution<size_t>{ 0, data.size() - 1 }(generator_));
     for (unsigned i = 1; i < k; ++i)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 88472a2818..dcbb3ad9ea 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,8 @@
 cmake_minimum_required(VERSION 3.22)
 project(moveit_kinematics)
 
+add_definitions(-DNOMINMAX)
+
 # Common cmake code applied to all moveit packages
 find_package(moveit_common REQUIRED)
 moveit_package()
diff --git a/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/NearestNeighborsGNAT.h b/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/NearestNeighborsGNAT.h
index 49a02b9d6b..e8142e5711 100644
--- a/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/NearestNeighborsGNAT.h
+++ b/cached_ik_kinematics_plugin/include/moveit/cached_ik_kinematics_plugin/detail/NearestNeighborsGNAT.h
@@ -551,7 +551,9 @@ class NearestNeighborsGNAT : public NearestNeighbors<_T>
         std::vector<int> permutation(children_.size());
         for (unsigned int i = 0; i < permutation.size(); ++i)
           permutation[i] = i;
-        std::random_shuffle(permutation.begin(), permutation.end());
+        std::random_device rng;
+        std::mt19937 urng(rng());
+        std::shuffle(permutation.begin(), permutation.end(), urng);
 
         for (unsigned int i = 0; i < children_.size(); ++i)
           if (permutation[i] >= 0)
@@ -605,7 +607,9 @@ class NearestNeighborsGNAT : public NearestNeighbors<_T>
         std::vector<int> permutation(children_.size());
         for (unsigned int i = 0; i < permutation.size(); ++i)
           permutation[i] = i;
-        std::random_shuffle(permutation.begin(), permutation.end());
+        std::random_device rng;
+        std::mt19937 urng(rng());
+        std::shuffle(permutation.begin(), permutation.end(), urng);
 
         for (unsigned int i = 0; i < children_.size(); ++i)
           if (permutation[i] >= 0)


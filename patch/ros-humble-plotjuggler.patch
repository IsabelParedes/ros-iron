diff --git a/3rdparty/QCodeEditor/CMakeLists.txt b/3rdparty/QCodeEditor/CMakeLists.txt
index f9073734..9e297357 100644
--- a/3rdparty/QCodeEditor/CMakeLists.txt
+++ b/3rdparty/QCodeEditor/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.6)
+cmake_minimum_required(VERSION 3.20)
 project(QCodeEditor)
 
 set(CMAKE_CXX_STANDARD 11)
@@ -70,9 +70,7 @@ set(CMAKE_AUTOMOC On)
 set(CMAKE_AUTORCC ON)
 
 # Find includes in corresponding build directories
-find_package(Qt5Core    CONFIG REQUIRED)
-find_package(Qt5Widgets CONFIG REQUIRED)
-find_package(Qt5Gui     CONFIG REQUIRED)
+find_package(Qt5 COMPONENTS Core Widgets Gui REQUIRED)
 
 add_library(QCodeEditor STATIC
     ${RESOURCES_FILE}
@@ -84,20 +82,6 @@ target_include_directories(QCodeEditor PUBLIC
     include
 )
 
-if(CMAKE_COMPILER_IS_GNUCXX)
-    target_compile_options(QCodeEditor
-		PRIVATE
-		-ansi
-		-pedantic
-		-Wall
-		-Wextra
-		-Weffc++
-		-Woverloaded-virtual
-		-Winit-self
-		-Wunreachable-code
-	)
-endif(CMAKE_COMPILER_IS_GNUCXX)
-
 target_link_libraries(QCodeEditor
     Qt5::Core
     Qt5::Widgets
diff --git a/3rdparty/Qt-Advanced-Docking/CMakeLists.txt b/3rdparty/Qt-Advanced-Docking/CMakeLists.txt
index 6b650f1b..1f85254c 100644
--- a/3rdparty/Qt-Advanced-Docking/CMakeLists.txt
+++ b/3rdparty/Qt-Advanced-Docking/CMakeLists.txt
@@ -66,8 +66,10 @@ target_compile_definitions(qt_advanced_docking PUBLIC ADS_STATIC)
 target_link_libraries(qt_advanced_docking PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets)
 
 if(UNIX AND NOT APPLE)
+    find_package(XCB REQUIRED)
     target_link_libraries(qt_advanced_docking PUBLIC Qt5::X11Extras)
-        target_link_libraries(qt_advanced_docking PRIVATE xcb)
+    target_link_libraries(qt_advanced_docking PRIVATE ${XCB_LIBRARIES})
+    target_include_directories(qt_advanced_docking SYSTEM PUBLIC ${XCB_INCLUDE_DIRS})
 endif()
 
 set_target_properties(qt_advanced_docking PROPERTIES
diff --git a/3rdparty/lua-5.4.3/CMakeLists.txt b/3rdparty/lua-5.4.3/CMakeLists.txt
index eb08333c..715f93a2 100644
--- a/3rdparty/lua-5.4.3/CMakeLists.txt
+++ b/3rdparty/lua-5.4.3/CMakeLists.txt
@@ -1,3 +1,5 @@
+include_directories( ./src  )
+
 set(LUA_LIB_SRCS 
     ${CMAKE_CURRENT_SOURCE_DIR}/src/lapi.c 
     ${CMAKE_CURRENT_SOURCE_DIR}/src/lcode.c 
@@ -32,12 +34,12 @@ set(LUA_LIB_SRCS
     ${CMAKE_CURRENT_SOURCE_DIR}/src/loadlib.c 
     ${CMAKE_CURRENT_SOURCE_DIR}/src/linit.c
     ${CMAKE_CURRENT_SOURCE_DIR}/src/lua.c)
-set(LUA_LIB_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/src)
+# set(LUA_LIB_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/src)
 
 add_compile_options(-fPIC)
 
 add_library(lua_static STATIC ${LUA_LIB_SRCS})
-target_include_directories(lua_static PUBLIC ${LUA_LIB_INCLUDE})
+# target_include_directories(lua_static PUBLIC ${LUA_LIB_INCLUDE})
 
 if ( NOT WIN32 )
     set(LUA_DEFINITIONS LUA_USE_POSIX)
@@ -48,3 +50,11 @@ if(EMSCRIPTEN)
 endif()
 target_compile_definitions(lua_static PUBLIC ${LUA_DEFINITIONS})
 
+install(
+     TARGETS
+        lua_static
+     EXPORT export_lua_static
+     LIBRARY DESTINATION lib
+     ARCHIVE DESTINATION lib
+     RUNTIME DESTINATION bin
+     INCLUDES DESTINATION include )
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 08b81610..28e7e3b6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -108,11 +108,9 @@ find_package(Qt5 REQUIRED COMPONENTS
 set( QT_LINK_LIBRARIES
     Qt5::Core
     Qt5::Widgets
-    Qt5::PrintSupport
     Qt5::Xml
     Qt5::Concurrent
     Qt5::Svg
-    Qt5::OpenGL
     Qt5::WebSockets
     )
 
@@ -171,16 +169,12 @@ add_library( plotjuggler_base
      plotjuggler_base/src/reactive_function.cpp
      )
 
-# target_link_libraries(plotjuggler_base plotjuggler_qwt)
+target_link_libraries(plotjuggler_base ${QT_LINK_LIBRARIES} plotjuggler_qwt lua_static)
 target_include_directories(plotjuggler_base INTERFACE
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
   $<INSTALL_INTERFACE:include>
 )
 
-target_include_directories(plotjuggler_base INTERFACE
-  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
-  $<INSTALL_INTERFACE:include>
-)
 #########################  INSTALL  ####################################
 
 if(COMPILING_WITH_CATKIN)
@@ -197,8 +191,9 @@ elseif(COMPILING_WITH_AMENT)
     set(PJ_PLUGIN_INSTALL_DIRECTORY lib/${PROJECT_NAME} )
 
     ament_export_targets(
-        ${PROJECT_NAME}Targets
         export_plotjuggler_qwt
+        export_lua_static
+        ${PROJECT_NAME}Targets
         HAS_LIBRARY_TARGET)
     ament_package()
 
diff --git a/cmake/FindXCB.cmake b/cmake/FindXCB.cmake
new file mode 100644
index 00000000..a2e2757a
--- /dev/null
+++ b/cmake/FindXCB.cmake
@@ -0,0 +1,51 @@
+# - FindXCB
+#
+# Copyright 2015 Valve Coporation
+
+find_package(PkgConfig)
+
+if(NOT XCB_FIND_COMPONENTS)
+    set(XCB_FIND_COMPONENTS xcb)
+endif()
+
+include(FindPackageHandleStandardArgs)
+set(XCB_FOUND true)
+set(XCB_INCLUDE_DIRS "")
+set(XCB_LIBRARIES "")
+foreach(comp ${XCB_FIND_COMPONENTS})
+    # component name
+    string(TOUPPER ${comp} compname)
+    string(REPLACE "-" "_" compname ${compname})
+    # header name
+    string(REPLACE "xcb-" "" headername xcb/${comp}.h)
+    # library name
+    set(libname ${comp})
+
+    pkg_check_modules(PC_${comp} QUIET ${comp})
+
+    find_path(${compname}_INCLUDE_DIR NAMES ${headername}
+        HINTS
+        ${PC_${comp}_INCLUDEDIR}
+        ${PC_${comp}_INCLUDE_DIRS}
+        )
+
+    find_library(${compname}_LIBRARY NAMES ${libname}
+        HINTS
+        ${PC_${comp}_LIBDIR}
+        ${PC_${comp}_LIBRARY_DIRS}
+        )
+
+    find_package_handle_standard_args(${comp}
+        FOUND_VAR ${comp}_FOUND
+        REQUIRED_VARS ${compname}_INCLUDE_DIR ${compname}_LIBRARY)
+    mark_as_advanced(${compname}_INCLUDE_DIR ${compname}_LIBRARY)
+
+    list(APPEND XCB_INCLUDE_DIRS ${${compname}_INCLUDE_DIR})
+    list(APPEND XCB_LIBRARIES ${${compname}_LIBRARY})
+
+    if(NOT ${comp}_FOUND)
+        set(XCB_FOUND false)
+    endif()
+endforeach()
+
+list(REMOVE_DUPLICATES XCB_INCLUDE_DIRS)

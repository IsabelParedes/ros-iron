diff --git a/CMakeLists.txt b/CMakeLists.txt
index cf57352..a3a81f2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -152,7 +152,7 @@ if (NOT Python3_NOT_FOUND AND NOT Numpy_NOT_FOUND AND PYTHONLIBS_FOUND AND BUILD
         COMMAND ${CMAKE_C_COMPILER} ${PY_CFLAGS} -I${PROJECT_BINARY_DIR} -c -o apriltag_pywrap.o ${PROJECT_SOURCE_DIR}/apriltag_pywrap.c
         DEPENDS ${PROJECT_SOURCE_DIR}/apriltag_pywrap.c ${PROJECT_BINARY_DIR}/apriltag_detect.docstring.h ${PROJECT_BINARY_DIR}/apriltag_py_type.docstring.h)
     add_custom_command(OUTPUT apriltag${PY_EXT_SUFFIX}
-        COMMAND ${PY_LINKER} ${PY_LDFLAGS} -Wl,-rpath,lib apriltag_pywrap.o $<TARGET_FILE:apriltag> -o apriltag${PY_EXT_SUFFIX}
+        COMMAND ${CMAKE_C_COMPILER} ${PY_LDFLAGS} -Wl,-rpath,lib apriltag_pywrap.o $<TARGET_FILE:apriltag> -o apriltag${PY_EXT_SUFFIX}
         DEPENDS ${PROJECT_NAME} apriltag_pywrap.o)
     add_custom_target(apriltag_python ALL
         DEPENDS apriltag${PY_EXT_SUFFIX})
diff --git a/Makefile b/Makefile
index 32574ad..b7c1b0c 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,7 @@
 PREFIX ?= /usr/local
 
-CC = gcc
-AR = ar
+CC ?= gcc
+AR ?= ar
 
 CFLAGS = -std=gnu99 -fPIC -Wall -Wno-unused-parameter -Wno-unused-function
 CFLAGS += -I. -O3 -fno-strict-overflow
diff --git a/example/Makefile b/example/Makefile
index 6027428..e8f059a 100644
--- a/example/Makefile
+++ b/example/Makefile
@@ -1,5 +1,5 @@
-CC = gcc
-CXX = g++
+CC ?= gcc
+CXX ?= g++
 
 CPPFLAGS = -I.. `pkg-config --cflags opencv4`
 CFLAGS = -g -std=gnu99 -Wall -Wno-unused-parameter -Wno-unused-function -O3
diff --git a/python_build_flags.py b/python_build_flags.py
index f3f0e79..865c85b 100644
--- a/python_build_flags.py
+++ b/python_build_flags.py
@@ -21,7 +21,7 @@ print('LINKER', end=';')
 print(conf.get('BLDSHARED', '').split()[0], end=';')
 
 print('LDFLAGS', end=';')
-print(' '.join(conf.get('BLDSHARED', '').split()[1:]) + ' ' + conf.get('BLDLIBRARY', '') + ' ' + conf.get('LDFLAGS', ''), end=';')
+print(' '.join(conf.get('BLDSHARED', '').split()[1:]) + ' ' + conf.get('LDFLAGS', ''), end=';')
 
 print('EXT_SUFFIX', end=';')
 ext_suffix = '.so'
